#!/usr/bin/env bash

# export HOMEBREW_PREFIX=$(brew --prefix)
if [[ "$(uname)" == "Darwin" ]]; then
  if [[ "$(arch)" == "arm64" ]]; then
    export HOMEBREW_PREFIX="/opt/homebrew"
  else
    export HOMEBREW_PREFIX="/usr/local"
  fi
fi

# brew is slow sometimes so let's just export them ourselves
# eval "$("${HOMEBREW_PREFIX}/bin/brew" shellenv)"
export HOMEBREW_CELLAR="${HOMEBREW_PREFIX}/Cellar";
export HOMEBREW_REPOSITORY="${HOMEBREW_PREFIX}";
export PATH="${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin${PATH+:$PATH}";
export MANPATH="${HOMEBREW_PREFIX}/share/man${MANPATH+:$MANPATH}";
export INFOPATH="${HOMEBREW_PREFIX}/share/info:${INFOPATH:-}";

# prefer vim
EDITOR=$(command -v vim)
export EDITOR

# Environment
export TZ=US/Eastern
# Prefer US English and use UTF-8
export LC_ALL="en_US.UTF-8"
export LANG="en_US"

# ignore duplicate history lines
export HISTCONTROL="erasedupes:ignoreboth"

# Larger bash history
export HISTSIZE=100000
export HISTFILESIZE=${HISTSIZE}

# set timestamps in history
export HISTTIMEFORMAT='%F %T '

# highlighting inside manpages and elsewhere
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# Link Homebrew casks in `/Applications` rather than `~/Applications`
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

# aws-cli config file
export AWS_CONFIG_FILE="${HOME}/.aws/config"

# go path
export GOPATH="${HOME}/go"

# gpg tty
export GPG_TTY=$(tty)

# use homebrew coreutils manpages
export MANPATH="${HOMEBREW_PREFIX}/opt/coreutils/libexec/gnuman:${MANPATH}"

# NVM
export NVM_DIR="${HOME}/.nvm"

# CPAN Stuff
export PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}";
export PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}";
export PERL_MB_OPT='--install_base "${HOME}/perl5"';
export PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5";

###
# PATH

# homebrew applications
# PATH="${HOMEBREW_PREFIX}/bin:$PATH"
# [ -d "${HOMEBREW_PREFIX}/bin" ] && PATH="${HOMEBREW_PREFIX}/bin:$PATH"
# [ -d "${HOMEBREW_PREFIX}/sbin" ] && PATH="${HOMEBREW_PREFIX}/sbin:$PATH"

# Add brew coreutils to $PATH
[ -d "${HOMEBREW_PREFIX}/opt/coreutils/libexec/gnubin" ] && PATH="${HOMEBREW_PREFIX}/opt/coreutils/libexec/gnubin:${PATH}"

# brew grep
[ -d "${HOMEBREW_PREFIX}/opt/grep/libexec/gnubin" ] && PATH="${HOMEBREW_PREFIX}/opt/grep/libexec/gnubin:${PATH}"

# brew gnu sed
[ -d "${HOMEBREW_PREFIX}/opt/gnu-sed/libexec/gnubin" ] && PATH="${HOMEBREW_PREFIX}/opt/gnu-sed/libexec/gnubin:${PATH}"

# brew findutils
[ -d "${HOMEBREW_PREFIX}/opt/findutils/libexec/gnubin" ] && PATH="${HOMEBREW_PREFIX}/opt/findutils/libexec/gnubin:${PATH}"

# CPAN
[ -d "${HOME}/perl5/bin" ] && PATH="${PATH}:${HOME}/perl5/bin"

# GO
[ -d "${GOPATH}/bin" ] && PATH=$PATH:${GOPATH}/bin

# kubectl krew
[ -d "${KREW_ROOT:-${HOME}/.krew}/bin" ] && PATH="${KREW_ROOT:-${HOME}/.krew}/bin:${PATH}"

# rancher-desktop
[ -d "~/.rd/bin/" ] && PATH="${PATH}:${HOME}/.rd/bin"

# gcloud components install doesn't always link everything
[ -d "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/" ] && PATH="${PATH}:/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin"

# set PATH so it includes user's private bin if it exists
[ -d "$HOME/bin" ] && PATH="$HOME/bin:$PATH"

export PATH
###

# java home
#export JAVA_HOME=$(/usr/libexec/java_home)

# here's LS_COLORS
# github.com/trapd00r/LS_COLORS
command -v gdircolors >/dev/null 2>&1 || alias gdircolors="dircolors"
eval "$(gdircolors -b ~/.dircolors)"

# disable zsh reminder
export BASH_SILENCE_DEPRECATION_WARNING="1"

# set default kube config path
export KUBE_CONFIG_PATH=$HOME/.kube/config
